{"remainingRequest":"D:\\vueTest\\hello\\node_modules\\babel-loader\\lib\\index.js!D:\\vueTest\\hello\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\vueTest\\hello\\src\\mock\\mock.js","dependencies":[{"path":"D:\\vueTest\\hello\\src\\mock\\mock.js","mtime":1535360065000},{"path":"D:\\vueTest\\hello\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vueTest\\hello\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vueTest\\hello\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Mock from 'mockjs';\nMock.mock(/getNewsList/, {\n  'list|5': [{\n    'url': '@url',\n    'title': '@ctitle(5, 20)'\n  }]\n});\n\nfunction getRImg() {\n  return Mock.Random.image('700x300', Mock.Random.hex());\n}\n\nMock.mock(/getSlides/, [{\n  src: getRImg(),\n  title: '@ctitle(4, 12)',\n  ky: 1,\n  toKey: 'analysis'\n}, {\n  src: getRImg(),\n  title: '@ctitle(4, 12)',\n  ky: 2,\n  toKey: 'count'\n}, {\n  src: getRImg(),\n  title: '@ctitle(4, 12)',\n  ky: 3,\n  toKey: 'publish'\n}, {\n  src: getRImg(),\n  title: '@ctitle(4, 12)',\n  ky: 4,\n  toKey: 'forecast'\n}]);\nMock.mock(/getPrice/, {\n  'number|1-100': 100\n});\nMock.mock(/createOrder/, 'number|1-100');\nMock.mock(/getBoardList/, [{\n  title: '@ctitle(4)',\n  description: '@ctitle(8, 12)',\n  id: 'car',\n  toKey: 'analysis',\n  saleout: '@boolean'\n}, {\n  title: '@ctitle(4)',\n  description: '@ctitle(8, 12)',\n  id: 'earth',\n  toKey: 'count',\n  saleout: '@boolean'\n}, {\n  title: '@ctitle(4)',\n  description: '@ctitle(8, 12)',\n  id: 'loud',\n  toKey: 'forecast',\n  saleout: '@boolean'\n}, {\n  title: '@ctitle(4)',\n  description: '@ctitle(8, 12)',\n  id: 'hill',\n  toKey: 'publish',\n  saleout: '@boolean'\n}]);\nMock.mock(/getProductList/, {\n  pc: {\n    title: 'PC产品',\n    list: [{\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }]\n  },\n  app: {\n    title: '手机应用类',\n    last: true,\n    list: [{\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }, {\n      name: '@ctitle(4)',\n      url: '@url',\n      hot: '@boolean'\n    }]\n  }\n});\nMock.mock(/getTableData/, {\n  \"total\": 25,\n  \"list|25\": [{\n    \"orderId\": \"@id\",\n    \"product\": \"@ctitle(4)\",\n    \"version\": \"@ctitle(3)\",\n    \"period\": \"@integer(1,5)年\",\n    \"buyNum\": \"@integer(1,8)\",\n    \"date\": \"@date()\",\n    \"amount\": \"@integer(100, 500)元\"\n  }]\n});",{"version":3,"sources":["D:\\vueTest\\hello\\src\\mock\\mock.js"],"names":["Mock","mock","getRImg","Random","image","hex","src","title","ky","toKey","description","id","saleout","pc","list","name","url","hot","app","last"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\n\nMock.mock(/getNewsList/, {\n    'list|5': [{\n        'url': '@url',\n        'title': '@ctitle(5, 20)'\n    }]\n})\nfunction getRImg () {\n\treturn Mock.Random.image('700x300', Mock.Random.hex())\n}\nMock.mock(/getSlides/, [\n    {\n      src: getRImg (),\n      title: '@ctitle(4, 12)',\n      ky: 1,\n      toKey: 'analysis'\n    },\n    {\n      src: getRImg (),\n      title: '@ctitle(4, 12)',\n      ky: 2,\n      toKey: 'count'\n    },\n    {\n      src: getRImg (),\n      title: '@ctitle(4, 12)',\n      ky: 3,\n      toKey: 'publish'\n    },\n    {\n      src: getRImg (),\n      title: '@ctitle(4, 12)',\n      ky: 4,\n      toKey: 'forecast'\n    }\n])\n\nMock.mock(/getPrice/, {\n\t'number|1-100': 100 \n})\nMock.mock(/createOrder/, 'number|1-100')\n\nMock.mock(/getBoardList/, [\n        {\n          title: '@ctitle(4)',\n          description: '@ctitle(8, 12)',\n          id: 'car',\n          toKey: 'analysis',\n          saleout: '@boolean'\n        },\n        {\n          title: '@ctitle(4)',\n          description: '@ctitle(8, 12)',\n          id: 'earth',\n          toKey: 'count',\n          saleout: '@boolean'\n        },\n        {\n          title: '@ctitle(4)',\n          description: '@ctitle(8, 12)',\n          id: 'loud',\n          toKey: 'forecast',\n          saleout: '@boolean'\n        },\n        {\n          title: '@ctitle(4)',\n          description: '@ctitle(8, 12)',\n          id: 'hill',\n          toKey: 'publish',\n          saleout: '@boolean'\n        }\n])\n\nMock.mock(/getProductList/, {\n        pc: {\n          title: 'PC产品',\n          list: [\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            }\n          ]\n        },\n        app: {\n          title: '手机应用类',\n          last: true,\n          list: [\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            },\n            {\n              name: '@ctitle(4)',\n              url: '@url',\n              hot: '@boolean'\n            }\n          ]\n        }\n})\nMock.mock(/getTableData/, {\n    \"total\": 25,\n    \"list|25\": [\n      {\n        \"orderId\": \"@id\",\n        \"product\": \"@ctitle(4)\",\n        \"version\": \"@ctitle(3)\",\n        \"period\": \"@integer(1,5)年\",\n        \"buyNum\": \"@integer(1,8)\",\n        \"date\": \"@date()\",\n        \"amount\": \"@integer(100, 500)元\"\n      }\n    ]\n})"]}]}